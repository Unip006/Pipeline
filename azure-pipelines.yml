# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main


pool:
  vmImage: ubuntu-latest

steps:
- checkout: self  

#fetch
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '6.x'
#Restore dependencies
- script: dotnet restore
  displayName: 'Restore .NET dependencies'
#Compile
- script: dotnet build --configuration Release 
  displayName: 'Build .NET Project'

#Test
- script: dotnet test --configuration Release --logger trx
  displayName: 'Run Unit Tests'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/*.trx'
    testRunTitle: 'Unit Tests'

#Static Code Analysis (need to add StyleCop package by terminal)
- script: dotnet build /warnaserror
  displayName: 'Run Static Code Analysis'

#Packaging
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false #This project is console and not Web, need to add this line
    projects: 'HelloWorld.csproj'
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
  displayName: 'Publish .NET Application'

#Add Artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
  displayName: 'Publish Build Artifacts'

- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: 'HelloWorld.csproj'
    versioningScheme: 'off'

- task: DotNetCoreCLI@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'




- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
